This is the README for Jay LeCavalier's final project in computer graphics

HOURS SPENT: 28

CONTENTS:
1. How to compile and run
2. What it does
3. Key Bindings
4. Things to consider while grading




1. How to compile and run:

Simply navigate to the directory containing this readme using your terminal and type "make".

then, type "./final"



2. What it does:

This program will (eventually) be the graphical frontend for a puzzle game. The game is played by moving pieces around on a board. However, you don't move the pieces directly: you move the board. Moving a single piece moves all the pieces on the board.




3. Key Bindings:

The arrow keys tilt the board and move the (for the time being) only piece on the board.

ESC quits the program.




4. Things to consider while grading

- The surface normals are correct. The lighting makes the objects look nice (especially the wood and the grass blades. The wood looks shiny, like it has a layer of gloss on it.).

- The blades of grass each have a randomly generated height, width, bend, and rotation every time you run the program! Even though there are hundreds of grass blades, the program still runs smoothly.

- The body of the fountain features a unique shape, which required some pretty intense trigonometry to design. This also holds true for the shape of the hourglass body, which was just two cones in the previous version.

- The top of the fountain features a particle generator. I learned about particles mostly from this site: http://www.swiftless.com/tutorials/opengl/particles.html